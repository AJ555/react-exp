{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xluci\\\\Desktop\\\\React\\\\sample-app\\\\src\\\\Counter\\\\counter.js\";\nimport React, { Component } from \"react\";\nimport \"./counter.scss\";\n\nclass Counter extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Counter;\n\nfunction Timer(props) {\n  const timerInterval = (props.timer ? props.timer : 1) * 60 * 1000;\n  const newDate = new Date();\n  newDate.setHours(0, 0, 0, 0);\n  const endTime = new Date(newDate.getTime() + timerInterval);\n  const refreshTimeInMiliseconds = 1000;\n  let timeSpent = 0;\n  let timerTime = {\n    min: 0,\n    sec: 0\n  };\n  let timerMessage = \"Let the countdown begin!\";\n  const interval = setInterval(() => {\n    timerMessage = \"Keep Going\";\n    timeSpent += refreshTimeInMiliseconds;\n    let temp = new Date(newDate.getTime() + timeSpent);\n    console.log(temp.getMinutes(), temp.getSeconds());\n    timerTime.min = temp.getMinutes();\n    timerTime.sec = temp.getSeconds();\n\n    if (temp.getTime() === endTime.getTime()) {\n      timerMessage = \"Great Work!\";\n      clearInterval(interval);\n    }\n  }, refreshTimeInMiliseconds);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, timerMessage), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, timerTime.min), \":\", timerTime.sec));\n}","map":{"version":3,"sources":["C:/Users/xluci/Desktop/React/sample-app/src/Counter/counter.js"],"names":["React","Component","Counter","render","Timer","props","timerInterval","timer","newDate","Date","setHours","endTime","getTime","refreshTimeInMiliseconds","timeSpent","timerTime","min","sec","timerMessage","interval","setInterval","temp","console","log","getMinutes","getSeconds","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAP6B;;AAShC,eAAeD,OAAf;;AAEA,SAASE,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,aAAa,GAAG,CAACD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4B,CAA7B,IAAkC,EAAlC,GAAuC,IAA7D;AACA,QAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,QAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASD,OAAO,CAACI,OAAR,KAAoBN,aAA7B,CAAhB;AACA,QAAMO,wBAAwB,GAAG,IAAjC;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,SAAS,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAhB;AACA,MAAIC,YAAY,GAAG,0BAAnB;AACA,QAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,IAAAA,YAAY,GAAG,YAAf;AACAJ,IAAAA,SAAS,IAAID,wBAAb;AACA,QAAIQ,IAAI,GAAG,IAAIZ,IAAJ,CAASD,OAAO,CAACI,OAAR,KAAoBE,SAA7B,CAAX;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,EAAZ,EAA+BH,IAAI,CAACI,UAAL,EAA/B;AACAV,IAAAA,SAAS,CAACC,GAAV,GAAgBK,IAAI,CAACG,UAAL,EAAhB;AACAT,IAAAA,SAAS,CAACE,GAAV,GAAgBI,IAAI,CAACI,UAAL,EAAhB;;AACA,QAAIJ,IAAI,CAACT,OAAL,OAAmBD,OAAO,CAACC,OAAR,EAAvB,EAA0C;AACxCM,MAAAA,YAAY,GAAG,aAAf;AACAQ,MAAAA,aAAa,CAACP,QAAD,CAAb;AACD;AACF,GAX2B,EAWzBN,wBAXyB,CAA5B;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,YAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,SAAS,CAACC,GAAjB,CADF,OACgCD,SAAS,CAACE,GAD1C,CAFF,CADF;AAQD","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./counter.scss\";\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Timer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counter;\r\n\r\nfunction Timer(props) {\r\n  const timerInterval = (props.timer ? props.timer : 1) * 60 * 1000;\r\n  const newDate = new Date();\r\n  newDate.setHours(0, 0, 0, 0);\r\n  const endTime = new Date(newDate.getTime() + timerInterval);\r\n  const refreshTimeInMiliseconds = 1000;\r\n  let timeSpent = 0;\r\n  let timerTime = { min: 0, sec: 0 };\r\n  let timerMessage = \"Let the countdown begin!\";\r\n  const interval = setInterval(() => {\r\n    timerMessage = \"Keep Going\";\r\n    timeSpent += refreshTimeInMiliseconds;\r\n    let temp = new Date(newDate.getTime() + timeSpent);\r\n    console.log(temp.getMinutes(), temp.getSeconds());\r\n    timerTime.min = temp.getMinutes();\r\n    timerTime.sec = temp.getSeconds();\r\n    if (temp.getTime() === endTime.getTime()) {\r\n      timerMessage = \"Great Work!\";\r\n      clearInterval(interval);\r\n    }\r\n  }, refreshTimeInMiliseconds);\r\n  return (\r\n    <div>\r\n      <h1>{timerMessage}</h1>\r\n      <div>\r\n        <span>{timerTime.min}</span>:{timerTime.sec}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}