{"ast":null,"code":"import _assertThisInitialized from\"C:\\\\Users\\\\xluci\\\\Documents\\\\GitHub\\\\react-exp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"C:\\\\Users\\\\xluci\\\\Documents\\\\GitHub\\\\react-exp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\xluci\\\\Documents\\\\GitHub\\\\react-exp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\xluci\\\\Documents\\\\GitHub\\\\react-exp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\xluci\\\\Documents\\\\GitHub\\\\react-exp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./counter.scss\";var Counter=/*#__PURE__*/function(_Component){_inherits(Counter,_Component);var _super=_createSuper(Counter);function Counter(){_classCallCheck(this,Counter);return _super.apply(this,arguments);}_createClass(Counter,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\"},/*#__PURE__*/React.createElement(Timer,null));}}]);return Counter;}(Component);export default Counter;var Timer=/*#__PURE__*/function(_Component2){_inherits(Timer,_Component2);var _super2=_createSuper(Timer);function Timer(props){var _this;_classCallCheck(this,Timer);_this=_super2.call(this,props);_this.state={timerMessage:\"Let the countdown begin!\",timerTime:{min:0,sec:0}};_this.updateTimer=_this.updateTimer.bind(_assertThisInitialized(_this));return _this;}_createClass(Timer,[{key:\"updateTimer\",value:function updateTimer(){var _this2=this;var timerInterval=(this.props.timer?this.props.timer:1)*60*1000;var newDate=new Date();newDate.setHours(0,0,0,0);var endTime=new Date(newDate.getTime()+timerInterval);var refreshTimeInMiliseconds=1000;var timeSpent=0;var interval=setInterval(function(){_this2.setState({timerMessage:\"Keep Going\"});timeSpent+=refreshTimeInMiliseconds;var temp=new Date(newDate.getTime()+timeSpent);console.log(temp.getMinutes(),temp.getSeconds());_this2.setState({timerTime:{min:temp.getMinutes(),sec:temp.getSeconds()}});if(temp.getTime()===endTime.getTime()){_this2.setState({timerMessage:\"Great Work!\"});clearInterval(interval);}},refreshTimeInMiliseconds);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,this.state.timerMessage),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:this.updateTimer},\"Start Timer\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",null,this.state.timerTime.min),\":\",this.state.timerTime.sec));}}]);return Timer;}(Component);","map":{"version":3,"sources":["C:/Users/xluci/Documents/GitHub/react-exp/src/Counter/counter.js"],"names":["React","Component","Counter","Timer","props","state","timerMessage","timerTime","min","sec","updateTimer","bind","timerInterval","timer","newDate","Date","setHours","endTime","getTime","refreshTimeInMiliseconds","timeSpent","interval","setInterval","setState","temp","console","log","getMinutes","getSeconds","clearInterval"],"mappings":"k1BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,gBAAP,C,GACMC,CAAAA,O,mPACK,CACP,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,oBAAC,KAAD,MADF,CADF,CAKD,C,qBAPmBD,S,EAStB,cAAeC,CAAAA,OAAf,C,GAEMC,CAAAA,K,iGACJ,eAAYC,KAAZ,CAAmB,uCACjB,wBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,YAAY,CAAE,0BADH,CAEXC,SAAS,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,GAAG,CAAE,CAAf,CAFA,CAAb,CAIA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CANiB,aAOlB,C,mEACa,iBACZ,GAAMC,CAAAA,aAAa,CAAG,CAAC,KAAKR,KAAL,CAAWS,KAAX,CAAmB,KAAKT,KAAL,CAAWS,KAA9B,CAAsC,CAAvC,EAA4C,EAA5C,CAAiD,IAAvE,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,EAAhB,CACAD,OAAO,CAACE,QAAR,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,EACA,GAAMC,CAAAA,OAAO,CAAG,GAAIF,CAAAA,IAAJ,CAASD,OAAO,CAACI,OAAR,GAAoBN,aAA7B,CAAhB,CACA,GAAMO,CAAAA,wBAAwB,CAAG,IAAjC,CACA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjC,MAAI,CAACC,QAAL,CAAc,CAAEjB,YAAY,CAAE,YAAhB,CAAd,EACAc,SAAS,EAAID,wBAAb,CACA,GAAIK,CAAAA,IAAI,CAAG,GAAIT,CAAAA,IAAJ,CAASD,OAAO,CAACI,OAAR,GAAoBE,SAA7B,CAAX,CACAK,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,EAAZ,CAA+BH,IAAI,CAACI,UAAL,EAA/B,EACA,MAAI,CAACL,QAAL,CAAc,CACZhB,SAAS,CAAE,CAAEC,GAAG,CAAEgB,IAAI,CAACG,UAAL,EAAP,CAA0BlB,GAAG,CAAEe,IAAI,CAACI,UAAL,EAA/B,CADC,CAAd,EAGA,GAAIJ,IAAI,CAACN,OAAL,KAAmBD,OAAO,CAACC,OAAR,EAAvB,CAA0C,CACxC,MAAI,CAACK,QAAL,CAAc,CAAEjB,YAAY,CAAE,aAAhB,CAAd,EACAuB,aAAa,CAACR,QAAD,CAAb,CACD,CACF,CAZ2B,CAYzBF,wBAZyB,CAA5B,CAaD,C,uCACQ,CACP,mBACE,4CACE,8BAAK,KAAKd,KAAL,CAAWC,YAAhB,CADF,cAEE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,KAAKI,WAApC,gBAFF,cAKE,4CACE,gCAAO,KAAKL,KAAL,CAAWE,SAAX,CAAqBC,GAA5B,CADF,KAC2C,KAAKH,KAAL,CAAWE,SAAX,CAAqBE,GADhE,CALF,CADF,CAWD,C,mBA1CiBR,S","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./counter.scss\";\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Timer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counter;\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timerMessage: \"Let the countdown begin!\",\r\n      timerTime: { min: 0, sec: 0 },\r\n    };\r\n    this.updateTimer = this.updateTimer.bind(this);\r\n  }\r\n  updateTimer() {\r\n    const timerInterval = (this.props.timer ? this.props.timer : 1) * 60 * 1000;\r\n    const newDate = new Date();\r\n    newDate.setHours(0, 0, 0, 0);\r\n    const endTime = new Date(newDate.getTime() + timerInterval);\r\n    const refreshTimeInMiliseconds = 1000;\r\n    let timeSpent = 0;\r\n    const interval = setInterval(() => {\r\n      this.setState({ timerMessage: \"Keep Going\" });\r\n      timeSpent += refreshTimeInMiliseconds;\r\n      let temp = new Date(newDate.getTime() + timeSpent);\r\n      console.log(temp.getMinutes(), temp.getSeconds());\r\n      this.setState({\r\n        timerTime: { min: temp.getMinutes(), sec: temp.getSeconds() },\r\n      });\r\n      if (temp.getTime() === endTime.getTime()) {\r\n        this.setState({ timerMessage: \"Great Work!\" });\r\n        clearInterval(interval);\r\n      }\r\n    }, refreshTimeInMiliseconds);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.timerMessage}</h1>\r\n        <button type=\"button\" onClick={this.updateTimer}>\r\n          Start Timer\r\n        </button>\r\n        <div>\r\n          <span>{this.state.timerTime.min}</span>:{this.state.timerTime.sec}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}